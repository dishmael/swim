// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/rpc.proto

package swim

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
	LastSeen             int64    `protobuf:"varint,4,opt,name=LastSeen,proto3" json:"LastSeen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Node) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Node) GetLastSeen() int64 {
	if m != nil {
		return m.LastSeen
	}
	return 0
}

type JoinMessageInput struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinMessageInput) Reset()         { *m = JoinMessageInput{} }
func (m *JoinMessageInput) String() string { return proto.CompactTextString(m) }
func (*JoinMessageInput) ProtoMessage()    {}
func (*JoinMessageInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{1}
}

func (m *JoinMessageInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinMessageInput.Unmarshal(m, b)
}
func (m *JoinMessageInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinMessageInput.Marshal(b, m, deterministic)
}
func (m *JoinMessageInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinMessageInput.Merge(m, src)
}
func (m *JoinMessageInput) XXX_Size() int {
	return xxx_messageInfo_JoinMessageInput.Size(m)
}
func (m *JoinMessageInput) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinMessageInput.DiscardUnknown(m)
}

var xxx_messageInfo_JoinMessageInput proto.InternalMessageInfo

func (m *JoinMessageInput) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *JoinMessageInput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *JoinMessageInput) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type JoinMessageOutput struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Nodes                []*Node  `protobuf:"bytes,2,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	Success              bool     `protobuf:"varint,3,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinMessageOutput) Reset()         { *m = JoinMessageOutput{} }
func (m *JoinMessageOutput) String() string { return proto.CompactTextString(m) }
func (*JoinMessageOutput) ProtoMessage()    {}
func (*JoinMessageOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{2}
}

func (m *JoinMessageOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinMessageOutput.Unmarshal(m, b)
}
func (m *JoinMessageOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinMessageOutput.Marshal(b, m, deterministic)
}
func (m *JoinMessageOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinMessageOutput.Merge(m, src)
}
func (m *JoinMessageOutput) XXX_Size() int {
	return xxx_messageInfo_JoinMessageOutput.Size(m)
}
func (m *JoinMessageOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinMessageOutput.DiscardUnknown(m)
}

var xxx_messageInfo_JoinMessageOutput proto.InternalMessageInfo

func (m *JoinMessageOutput) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *JoinMessageOutput) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *JoinMessageOutput) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type LeaveMessageInput struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveMessageInput) Reset()         { *m = LeaveMessageInput{} }
func (m *LeaveMessageInput) String() string { return proto.CompactTextString(m) }
func (*LeaveMessageInput) ProtoMessage()    {}
func (*LeaveMessageInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{3}
}

func (m *LeaveMessageInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveMessageInput.Unmarshal(m, b)
}
func (m *LeaveMessageInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveMessageInput.Marshal(b, m, deterministic)
}
func (m *LeaveMessageInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveMessageInput.Merge(m, src)
}
func (m *LeaveMessageInput) XXX_Size() int {
	return xxx_messageInfo_LeaveMessageInput.Size(m)
}
func (m *LeaveMessageInput) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveMessageInput.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveMessageInput proto.InternalMessageInfo

func (m *LeaveMessageInput) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *LeaveMessageInput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type LeaveMessageOutput struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveMessageOutput) Reset()         { *m = LeaveMessageOutput{} }
func (m *LeaveMessageOutput) String() string { return proto.CompactTextString(m) }
func (*LeaveMessageOutput) ProtoMessage()    {}
func (*LeaveMessageOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{4}
}

func (m *LeaveMessageOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveMessageOutput.Unmarshal(m, b)
}
func (m *LeaveMessageOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveMessageOutput.Marshal(b, m, deterministic)
}
func (m *LeaveMessageOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveMessageOutput.Merge(m, src)
}
func (m *LeaveMessageOutput) XXX_Size() int {
	return xxx_messageInfo_LeaveMessageOutput.Size(m)
}
func (m *LeaveMessageOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveMessageOutput.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveMessageOutput proto.InternalMessageInfo

func (m *LeaveMessageOutput) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *LeaveMessageOutput) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type PingMessageInput struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Source               *Node    `protobuf:"bytes,2,opt,name=Source,proto3" json:"Source,omitempty"`
	Joins                []*Node  `protobuf:"bytes,3,rep,name=Joins,proto3" json:"Joins,omitempty"`
	Leaves               []*Node  `protobuf:"bytes,4,rep,name=Leaves,proto3" json:"Leaves,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMessageInput) Reset()         { *m = PingMessageInput{} }
func (m *PingMessageInput) String() string { return proto.CompactTextString(m) }
func (*PingMessageInput) ProtoMessage()    {}
func (*PingMessageInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{5}
}

func (m *PingMessageInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMessageInput.Unmarshal(m, b)
}
func (m *PingMessageInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMessageInput.Marshal(b, m, deterministic)
}
func (m *PingMessageInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMessageInput.Merge(m, src)
}
func (m *PingMessageInput) XXX_Size() int {
	return xxx_messageInfo_PingMessageInput.Size(m)
}
func (m *PingMessageInput) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMessageInput.DiscardUnknown(m)
}

var xxx_messageInfo_PingMessageInput proto.InternalMessageInfo

func (m *PingMessageInput) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PingMessageInput) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *PingMessageInput) GetJoins() []*Node {
	if m != nil {
		return m.Joins
	}
	return nil
}

func (m *PingMessageInput) GetLeaves() []*Node {
	if m != nil {
		return m.Leaves
	}
	return nil
}

type PingRequestMessageInput struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Source               *Node    `protobuf:"bytes,2,opt,name=Source,proto3" json:"Source,omitempty"`
	RemoteNode           *Node    `protobuf:"bytes,3,opt,name=RemoteNode,proto3" json:"RemoteNode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequestMessageInput) Reset()         { *m = PingRequestMessageInput{} }
func (m *PingRequestMessageInput) String() string { return proto.CompactTextString(m) }
func (*PingRequestMessageInput) ProtoMessage()    {}
func (*PingRequestMessageInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{6}
}

func (m *PingRequestMessageInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequestMessageInput.Unmarshal(m, b)
}
func (m *PingRequestMessageInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequestMessageInput.Marshal(b, m, deterministic)
}
func (m *PingRequestMessageInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequestMessageInput.Merge(m, src)
}
func (m *PingRequestMessageInput) XXX_Size() int {
	return xxx_messageInfo_PingRequestMessageInput.Size(m)
}
func (m *PingRequestMessageInput) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequestMessageInput.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequestMessageInput proto.InternalMessageInfo

func (m *PingRequestMessageInput) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PingRequestMessageInput) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *PingRequestMessageInput) GetRemoteNode() *Node {
	if m != nil {
		return m.RemoteNode
	}
	return nil
}

type PingMessageOutput struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMessageOutput) Reset()         { *m = PingMessageOutput{} }
func (m *PingMessageOutput) String() string { return proto.CompactTextString(m) }
func (*PingMessageOutput) ProtoMessage()    {}
func (*PingMessageOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{7}
}

func (m *PingMessageOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMessageOutput.Unmarshal(m, b)
}
func (m *PingMessageOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMessageOutput.Marshal(b, m, deterministic)
}
func (m *PingMessageOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMessageOutput.Merge(m, src)
}
func (m *PingMessageOutput) XXX_Size() int {
	return xxx_messageInfo_PingMessageOutput.Size(m)
}
func (m *PingMessageOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMessageOutput.DiscardUnknown(m)
}

var xxx_messageInfo_PingMessageOutput proto.InternalMessageInfo

func (m *PingMessageOutput) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PingMessageOutput) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Node)(nil), "swim.Node")
	proto.RegisterType((*JoinMessageInput)(nil), "swim.JoinMessageInput")
	proto.RegisterType((*JoinMessageOutput)(nil), "swim.JoinMessageOutput")
	proto.RegisterType((*LeaveMessageInput)(nil), "swim.LeaveMessageInput")
	proto.RegisterType((*LeaveMessageOutput)(nil), "swim.LeaveMessageOutput")
	proto.RegisterType((*PingMessageInput)(nil), "swim.PingMessageInput")
	proto.RegisterType((*PingRequestMessageInput)(nil), "swim.PingRequestMessageInput")
	proto.RegisterType((*PingMessageOutput)(nil), "swim.PingMessageOutput")
}

func init() {
	proto.RegisterFile("rpc/rpc.proto", fileDescriptor_d9874a201429861e)
}

var fileDescriptor_d9874a201429861e = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcd, 0x4e, 0xc2, 0x40,
	0x10, 0xa6, 0xed, 0x82, 0x30, 0x84, 0x04, 0xf6, 0x20, 0x0d, 0xd1, 0xa4, 0xd9, 0x53, 0xe3, 0x01,
	0x13, 0x3c, 0x91, 0x78, 0xf1, 0x64, 0x54, 0x54, 0xb2, 0xf5, 0x6c, 0x52, 0xcb, 0x86, 0xf4, 0xd0,
	0x1f, 0xbb, 0x5b, 0x79, 0x00, 0x0f, 0xbe, 0x83, 0x4f, 0x6b, 0x66, 0xa1, 0x50, 0x28, 0xf1, 0x27,
	0x72, 0x63, 0x67, 0x86, 0xef, 0x6f, 0x26, 0x85, 0x4e, 0x96, 0x06, 0xe7, 0x59, 0x1a, 0x0c, 0xd3,
	0x2c, 0x51, 0x09, 0x25, 0x72, 0x11, 0x46, 0x6c, 0x0a, 0xe4, 0x21, 0x99, 0x09, 0x6a, 0xc3, 0xd1,
	0xd5, 0x6c, 0x96, 0x09, 0x29, 0x6d, 0xc3, 0x31, 0xdc, 0x16, 0x2f, 0x9e, 0x94, 0x02, 0x99, 0x26,
	0x99, 0xb2, 0x4d, 0xc7, 0x70, 0x3b, 0x5c, 0xff, 0xa6, 0x03, 0x68, 0x4e, 0x7c, 0xa9, 0x3c, 0x21,
	0x62, 0x9b, 0x38, 0x86, 0x6b, 0xf1, 0xf5, 0x9b, 0x3d, 0x43, 0xf7, 0x36, 0x09, 0xe3, 0x7b, 0x21,
	0xa5, 0x3f, 0x17, 0x37, 0x71, 0x9a, 0x2b, 0x7a, 0x02, 0xad, 0xa7, 0x30, 0x12, 0x52, 0xf9, 0x51,
	0xaa, 0xf1, 0x2d, 0xbe, 0x29, 0x94, 0xb9, 0xcd, 0xfd, 0xdc, 0xd6, 0x86, 0x9b, 0x45, 0xd0, 0x2b,
	0xe1, 0x3f, 0xe6, 0xea, 0x67, 0x02, 0x07, 0xea, 0x68, 0x12, 0xe1, 0x2d, 0xb7, 0x3d, 0x82, 0x21,
	0x5a, 0x1f, 0x62, 0x89, 0x2f, 0x1b, 0x28, 0xc1, 0xcb, 0x83, 0x00, 0x25, 0x20, 0x57, 0x93, 0x17,
	0x4f, 0x76, 0x07, 0xbd, 0x89, 0xf0, 0xdf, 0xc4, 0x21, 0xfc, 0xb0, 0x09, 0xd0, 0x32, 0xd8, 0xaf,
	0xc4, 0x97, 0xa4, 0x99, 0xdb, 0xd2, 0x3e, 0x0d, 0xe8, 0x4e, 0xc3, 0x78, 0xfe, 0x07, 0x69, 0x0c,
	0x1a, 0x5e, 0x92, 0x67, 0x81, 0xd0, 0x58, 0xdb, 0x51, 0xac, 0x3a, 0x98, 0x16, 0x06, 0x8c, 0x49,
	0x54, 0xd2, 0xd2, 0x0d, 0x44, 0xd1, 0x36, 0xa4, 0x4d, 0x2a, 0x23, 0xab, 0x0e, 0xfb, 0x30, 0xa0,
	0x8f, 0xe2, 0xb8, 0x78, 0xcd, 0x85, 0x54, 0x07, 0xd6, 0x78, 0x06, 0xc0, 0x45, 0x94, 0x28, 0x81,
	0x55, 0xbd, 0xb2, 0xed, 0xb9, 0x52, 0x17, 0x37, 0x58, 0x4a, 0xe9, 0x7f, 0x99, 0x8f, 0xde, 0x4d,
	0x20, 0xde, 0x22, 0x8c, 0xe8, 0x18, 0x08, 0x86, 0x41, 0x8f, 0x97, 0xac, 0xbb, 0x27, 0x3f, 0xe8,
	0x57, 0xea, 0x4b, 0x66, 0x56, 0xa3, 0x97, 0x50, 0xd7, 0x21, 0xd1, 0xd5, 0x4c, 0xe5, 0xbe, 0x06,
	0x76, 0xb5, 0xb1, 0xfe, 0xf7, 0x18, 0x08, 0xda, 0x29, 0x88, 0x77, 0x0f, 0xa0, 0x20, 0xae, 0x58,
	0x66, 0x35, 0x7a, 0x0d, 0xed, 0xd2, 0x4a, 0xe8, 0xe9, 0x66, 0x72, 0xcf, 0x96, 0xbe, 0x01, 0x7a,
	0x69, 0xe8, 0x4f, 0xc8, 0xc5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xda, 0x95, 0x09, 0x1b, 0x53,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SwimClient is the client API for Swim service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SwimClient interface {
	Join(ctx context.Context, in *JoinMessageInput, opts ...grpc.CallOption) (*JoinMessageOutput, error)
	Leave(ctx context.Context, in *LeaveMessageInput, opts ...grpc.CallOption) (*LeaveMessageOutput, error)
	Ping(ctx context.Context, in *PingMessageInput, opts ...grpc.CallOption) (*PingMessageOutput, error)
	PingRequest(ctx context.Context, in *PingRequestMessageInput, opts ...grpc.CallOption) (*PingMessageOutput, error)
}

type swimClient struct {
	cc grpc.ClientConnInterface
}

func NewSwimClient(cc grpc.ClientConnInterface) SwimClient {
	return &swimClient{cc}
}

func (c *swimClient) Join(ctx context.Context, in *JoinMessageInput, opts ...grpc.CallOption) (*JoinMessageOutput, error) {
	out := new(JoinMessageOutput)
	err := c.cc.Invoke(ctx, "/swim.Swim/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swimClient) Leave(ctx context.Context, in *LeaveMessageInput, opts ...grpc.CallOption) (*LeaveMessageOutput, error) {
	out := new(LeaveMessageOutput)
	err := c.cc.Invoke(ctx, "/swim.Swim/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swimClient) Ping(ctx context.Context, in *PingMessageInput, opts ...grpc.CallOption) (*PingMessageOutput, error) {
	out := new(PingMessageOutput)
	err := c.cc.Invoke(ctx, "/swim.Swim/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swimClient) PingRequest(ctx context.Context, in *PingRequestMessageInput, opts ...grpc.CallOption) (*PingMessageOutput, error) {
	out := new(PingMessageOutput)
	err := c.cc.Invoke(ctx, "/swim.Swim/PingRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SwimServer is the server API for Swim service.
type SwimServer interface {
	Join(context.Context, *JoinMessageInput) (*JoinMessageOutput, error)
	Leave(context.Context, *LeaveMessageInput) (*LeaveMessageOutput, error)
	Ping(context.Context, *PingMessageInput) (*PingMessageOutput, error)
	PingRequest(context.Context, *PingRequestMessageInput) (*PingMessageOutput, error)
}

// UnimplementedSwimServer can be embedded to have forward compatible implementations.
type UnimplementedSwimServer struct {
}

func (*UnimplementedSwimServer) Join(ctx context.Context, req *JoinMessageInput) (*JoinMessageOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedSwimServer) Leave(ctx context.Context, req *LeaveMessageInput) (*LeaveMessageOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}
func (*UnimplementedSwimServer) Ping(ctx context.Context, req *PingMessageInput) (*PingMessageOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedSwimServer) PingRequest(ctx context.Context, req *PingRequestMessageInput) (*PingMessageOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingRequest not implemented")
}

func RegisterSwimServer(s *grpc.Server, srv SwimServer) {
	s.RegisterService(&_Swim_serviceDesc, srv)
}

func _Swim_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinMessageInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwimServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swim.Swim/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwimServer).Join(ctx, req.(*JoinMessageInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swim_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveMessageInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwimServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swim.Swim/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwimServer).Leave(ctx, req.(*LeaveMessageInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swim_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMessageInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwimServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swim.Swim/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwimServer).Ping(ctx, req.(*PingMessageInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swim_PingRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequestMessageInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwimServer).PingRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swim.Swim/PingRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwimServer).PingRequest(ctx, req.(*PingRequestMessageInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Swim_serviceDesc = grpc.ServiceDesc{
	ServiceName: "swim.Swim",
	HandlerType: (*SwimServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Swim_Join_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _Swim_Leave_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Swim_Ping_Handler,
		},
		{
			MethodName: "PingRequest",
			Handler:    _Swim_PingRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/rpc.proto",
}
